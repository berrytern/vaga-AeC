"""initial_migration

Revision ID: de0f78533d1c
Revises:
Create Date: 2024-12-07 07:33:09.614230

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "de0f78533d1c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admin",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=60), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_admin_id"), "admin", ["id"], unique=False)
    op.create_table(
        "auth",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(length=30), nullable=False),
        sa.Column("user_type", sa.String(length=30), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("refresh_token", sa.String(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("foreign_id", sa.UUID(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_id"), "auth", ["id"], unique=False)
    op.create_index(op.f("ix_auth_username"), "auth", ["username"], unique=True)
    op.create_table(
        "book",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(length=60), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=False),
        sa.Column("author", sa.String(length=60), nullable=False),
        sa.Column("price", sa.DOUBLE_PRECISION(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title", "author", name="uq_title_author"),
    )
    op.create_index(op.f("ix_book_id"), "book", ["id"], unique=False)
    op.create_table(
        "reader",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=60), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("birthday", sa.Date(), nullable=True),
        sa.Column("books_read_count", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_reader_id"), "reader", ["id"], unique=False)
    op.create_table(
        "favorite_book",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("reader_id", sa.UUID(), nullable=False),
        sa.Column("book_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["book_id"], ["book.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["reader_id"], ["reader.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("reader_id", "book_id", name="uq_reader_favorite_book"),
    )
    op.create_index(op.f("ix_favorite_book_id"), "favorite_book", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_favorite_book_id"), table_name="favorite_book")
    op.drop_table("favorite_book")
    op.drop_index(op.f("ix_reader_id"), table_name="reader")
    op.drop_table("reader")
    op.drop_index(op.f("ix_book_id"), table_name="book")
    op.drop_table("book")
    op.drop_index(op.f("ix_auth_username"), table_name="auth")
    op.drop_index(op.f("ix_auth_id"), table_name="auth")
    op.drop_table("auth")
    op.drop_index(op.f("ix_admin_id"), table_name="admin")
    op.drop_table("admin")
    # ### end Alembic commands ###
